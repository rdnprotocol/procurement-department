"use client";
import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { useFormik } from "formik";
import * as yup from "yup";
import { toast } from "sonner";
import { Send } from "lucide-react";

interface ContactFormValues {
  name: string;
  email: string;
  message: string;
}

export const Feedback = () => {
  const [isLoading, setIsLoading] = useState(false);

  const contactForm = useFormik<ContactFormValues>({
    initialValues: {
      name: "",
      email: "",
      message: "",
    },
    validationSchema: yup.object({
      name: yup
        .string()
        .required("–ù—ç—Ä –æ—Ä—É—É–ª–∞—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π")
        .min(2, "–ù—ç—Ä —Ö–∞–º–≥–∏–π–Ω –±–∞–≥–∞–¥–∞–∞ 2 —Ç—ç–º–¥—ç–≥—Ç –±–∞–π—Ö —ë—Å—Ç–æ–π"),
      email: yup
        .string()
        .email("–ò-–º—ç–π–ª —Ö–∞—è–≥–∏–π–Ω —Ñ–æ—Ä–º–∞—Ç –±—É—Ä—É—É –±–∞–π–Ω–∞")
        .required("–ò-–º—ç–π–ª —Ö–∞—è–≥ –æ—Ä—É—É–ª–∞—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π"),
      message: yup
        .string()
        .required("–ó—É—Ä–≤–∞—Å –æ—Ä—É—É–ª–∞—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π")
        .min(10, "–ó—É—Ä–≤–∞—Å —Ö–∞–º–≥–∏–π–Ω –±–∞–≥–∞–¥–∞–∞ 10 —Ç—ç–º–¥—ç–≥—Ç –±–∞–π—Ö —ë—Å—Ç–æ–π")
        .max(1000, "–ó—É—Ä–≤–∞—Å —Ö–∞–º–≥–∏–π–Ω –∏—Ö–¥—ç—ç 1000 —Ç—ç–º–¥—ç–≥—Ç –±–∞–π—Ö —ë—Å—Ç–æ–π"),
    }),
    onSubmit: async (values, { resetForm }) => {
      setIsLoading(true);
      try {
        await new Promise((resolve) => setTimeout(resolve, 2000));

        // const response = await fetch('/api/contact', {
        //   method: 'POST',
        //   headers: { 'Content-Type': 'application/json' },
        //   body: JSON.stringify(values)
        // });

        toast.success("–¢–∞–Ω—ã —Å–∞–Ω–∞–ª —Ö“Ø—Å—ç–ª—Ç –∞–º–∂–∏–ª—Ç—Ç–∞–π –∏–ª–≥—ç—ç–≥–¥–ª—ç—ç!");
        resetForm();
      } catch (error) {
        console.error("Error sending message:", error);
        toast.error("–ê–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞. –î–∞—Ö–∏–Ω –æ—Ä–æ–ª–¥–æ–Ω–æ —É—É.");
      } finally {
        setIsLoading(false);
      }
    },
  });

  return (
    <div className="flex flex-col md:flex-row gap-4 p-6 justify-between">
      <div className="p-6 max-w-3xl bg-gray-50 rounded-lg">
        <div className="mb-8">
          <h1 className="text-2xl md:text-3xl text-center font-bold text-gray-900 mb-4 leading-relaxed">
            –¢–∞ –±–∞–π–≥—É—É–ª–ª–∞–≥—ã–Ω “Ø–π–ª –∞–∂–∏–ª–ª–∞–≥–∞–∞—Ç–∞–π —Ö–æ–ª–±–æ–æ—Ç–æ–π —Å–∞–Ω–∞–ª —Ö“Ø—Å—ç–ª—Ç—ç—ç –∏–ª–≥—ç—ç—Ö
            –±–æ–ª–æ–º–∂—Ç–æ–π
          </h1>
          <p className="text-gray-600">
            –ë–∏–¥ —Ç–∞–Ω—ã —Å–∞–Ω–∞–ª —Ö“Ø—Å—ç–ª—Ç–∏–π–≥ –∞–Ω—Ö–∞–∞—Ä–∞–ª—Ç–∞–π–≥–∞–∞—Ä –∞–≤—á “Ø–∑—ç–∂, —Ö–∞—Ä–∏—É ”©–≥”©—Ö –±–æ–ª–Ω–æ.
          </p>
        </div>

        {/* Form */}
        <form onSubmit={contactForm.handleSubmit} className="space-y-6">
          {/* Name Field */}
          <div className="space-y-2">
            <Label htmlFor="name" className="text-sm font-medium text-gray-700">
              –¢–∞–Ω—ã –Ω—ç—Ä <span className="text-red-500">*</span>
            </Label>
            <Input
              id="name"
              name="name"
              type="text"
              placeholder="–ù—ç—Ä—ç—ç –æ—Ä—É—É–ª–Ω–∞ —É—É"
              value={contactForm.values.name}
              onChange={contactForm.handleChange}
              onBlur={contactForm.handleBlur}
              className={`w-full ${
                contactForm.touched.name && contactForm.errors.name
                  ? "border-red-500 focus:border-red-500"
                  : ""
              }`}
            />
            {contactForm.touched.name && contactForm.errors.name && (
              <p className="text-sm text-red-600">{contactForm.errors.name}</p>
            )}
          </div>

          {/* Email Field */}
          <div className="space-y-2">
            <Label
              htmlFor="email"
              className="text-sm font-medium text-gray-700"
            >
              –ò-–º—ç–π–ª —Ö–∞—è–≥ <span className="text-red-500">*</span>
            </Label>
            <Input
              id="email"
              name="email"
              type="email"
              placeholder="example@email.com"
              value={contactForm.values.email}
              onChange={contactForm.handleChange}
              onBlur={contactForm.handleBlur}
              className={`w-full ${
                contactForm.touched.email && contactForm.errors.email
                  ? "border-red-500 focus:border-red-500"
                  : ""
              }`}
            />
            {contactForm.touched.email && contactForm.errors.email && (
              <p className="text-sm text-red-600">{contactForm.errors.email}</p>
            )}
          </div>

          {/* Message Field */}
          <div className="space-y-2">
            <Label
              htmlFor="message"
              className="text-sm font-medium text-gray-700"
            >
              –ó—É—Ä–≤–∞—Å <span className="text-red-500">*</span>
            </Label>
            <Textarea
              id="message"
              name="message"
              placeholder="–°–∞–Ω–∞–ª —Ö“Ø—Å—ç–ª—Ç—ç—ç —ç–Ω–¥ –±–∏—á–Ω—ç “Ø“Ø..."
              rows={6}
              value={contactForm.values.message}
              onChange={contactForm.handleChange}
              onBlur={contactForm.handleBlur}
              className={`w-full resize-none ${
                contactForm.touched.message && contactForm.errors.message
                  ? "border-red-500 focus:border-red-500"
                  : ""
              }`}
            />
            {contactForm.touched.message && contactForm.errors.message && (
              <p className="text-sm text-red-600">
                {contactForm.errors.message}
              </p>
            )}
            <p className="text-sm text-gray-500">
              {contactForm.values.message.length}/1000 —Ç—ç–º–¥—ç–≥—Ç
            </p>
          </div>

          {/* Submit Button */}
          <div className="pt-4">
            <Button
              type="submit"
              disabled={isLoading || !contactForm.isValid}
              className="w-full md:w-auto px-8 py-3 bg-[#24276B] cursor-pointer disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {isLoading ? (
                <div className="flex items-center">
                  <div className="animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent mr-2"></div>
                  –ò–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞...
                </div>
              ) : (
                <div className="flex items-center gap-2">
                  <Send />
                  –ò–ª–≥—ç—ç—Ö
                </div>
              )}
            </Button>
          </div>
        </form>
      </div>

      <div className="flex flex-col gap-4">
        <div className="p-4 bg-blue-50 rounded-lg h-fit">
          <h3 className="font-semibold text-blue-900 mb-2">–ê–Ω—Ö–∞–∞—Ä:</h3>
          <ul className="text-sm text-blue-800 space-y-1">
            <li>
              ‚Ä¢ –¢–∞–Ω—ã —Å–∞–Ω–∞–ª —Ö“Ø—Å—ç–ª—Ç–∏–π–≥ 3-5 –∞–∂–ª—ã–Ω ”©–¥—Ä–∏–π–Ω –¥–æ—Ç–æ—Ä —Ö–∞—Ä–∏—É–ª–∞—Ö –±–æ–ª–Ω–æ
            </li>
            <li>‚Ä¢ –Ø–∞—Ä–∞–ª—Ç–∞–π –∞—Å—É—É–¥–ª—ã–Ω —Ö—É–≤—å–¥ —É—Ç—Å–∞–∞—Ä —Ö–æ–ª–±–æ–≥–¥–æ–Ω–æ —É—É</li>
            <li>‚Ä¢ –•—É–≤–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª –Ω—É—É—Ü–ª–∞–≥–¥–∞—Ö –±–æ–ª–Ω–æ</li>
          </ul>
        </div>

        <div className="p-4 bg-gray-50 rounded-lg">
          <h3 className="font-semibold text-gray-900 mb-2">
            –•–æ–ª–±–æ–æ –±–∞—Ä–∏—Ö –º—ç–¥—ç—ç–ª—ç–ª:
          </h3>
          <div className="text-sm text-gray-700 space-y-1">
            <p>üìû –£—Ç–∞—Å: +976 7755 3579</p>
            <p>üìß –ò-–º—ç–π–ª: www.tuvprocurement@tov.gov.mn</p>
            <p>
              üìç –•–∞—è–≥: –¢”©–≤ –∞–π–º–∞–≥, –ó—É—É–Ω–º–æ–¥ —Å—É–º, 6 –¥—É–≥–∞–∞—Ä –±–∞–≥, –¢”©—Ä –∑–∞—Ö–∏—Ä–≥–∞–∞–Ω—ã 2-—Ä
              –±–∞–π—Ä
            </p>
            <p>üïê –ê–∂–ª—ã–Ω —Ü–∞–≥: –î–∞–≤–∞–∞-–ë–∞–∞—Å–∞–Ω 09:00-18:00</p>
          </div>
        </div>
      </div>
    </div>
  );
};
